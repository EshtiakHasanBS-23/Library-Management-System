"""Add column

Revision ID: e0387661c746
Revises: ebd0a338578b
Create Date: 2025-09-02 19:25:03.110330

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e0387661c746'
down_revision: Union[str, Sequence[str], None] = 'ebd0a338578b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('books', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('books', sa.Column('image', sa.String(length=255), nullable=True))
    op.drop_constraint(op.f('books_category_id_fkey'), 'books', type_='foreignkey')
    op.create_foreign_key(None, 'books', 'categories', ['category_id'], ['id'], ondelete='SET NULL')
    op.drop_column('books', 'available')
    op.add_column('borrows', sa.Column('returned_at', sa.DateTime(), nullable=True))
    op.add_column('borrows', sa.Column('status', sa.String(length=50), nullable=True))
    op.alter_column('borrows', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('borrows', 'book_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('borrows', 'return_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_constraint(op.f('borrows_book_id_fkey'), 'borrows', type_='foreignkey')
    op.drop_constraint(op.f('borrows_user_id_fkey'), 'borrows', type_='foreignkey')
    op.create_foreign_key(None, 'borrows', 'books', ['book_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'borrows', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('reviews', sa.Column('user_id', sa.Integer(), nullable=False))
    op.add_column('reviews', sa.Column('comment', sa.Text(), nullable=True))
    op.alter_column('reviews', 'book_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(op.f('reviews_book_id_fkey'), 'reviews', type_='foreignkey')
    op.create_foreign_key(None, 'reviews', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'reviews', 'books', ['book_id'], ['id'], ondelete='CASCADE')
    op.drop_column('reviews', 'content')
    op.add_column('users', sa.Column('email', sa.String(length=255), nullable=False))
    op.add_column('users', sa.Column('hashed_password', sa.String(length=255), nullable=False))
    op.add_column('users', sa.Column('is_admin', sa.Boolean(), nullable=True))
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.create_unique_constraint(None, 'users', ['email'])
    op.create_unique_constraint(None, 'users', ['username'])
    op.drop_column('users', 'password')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.drop_column('users', 'is_admin')
    op.drop_column('users', 'hashed_password')
    op.drop_column('users', 'email')
    op.add_column('reviews', sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'reviews', type_='foreignkey')
    op.drop_constraint(None, 'reviews', type_='foreignkey')
    op.create_foreign_key(op.f('reviews_book_id_fkey'), 'reviews', 'books', ['book_id'], ['id'])
    op.alter_column('reviews', 'book_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('reviews', 'comment')
    op.drop_column('reviews', 'user_id')
    op.drop_constraint(None, 'borrows', type_='foreignkey')
    op.drop_constraint(None, 'borrows', type_='foreignkey')
    op.create_foreign_key(op.f('borrows_user_id_fkey'), 'borrows', 'users', ['user_id'], ['id'])
    op.create_foreign_key(op.f('borrows_book_id_fkey'), 'borrows', 'books', ['book_id'], ['id'])
    op.alter_column('borrows', 'return_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('borrows', 'book_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('borrows', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('borrows', 'status')
    op.drop_column('borrows', 'returned_at')
    op.add_column('books', sa.Column('available', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'books', type_='foreignkey')
    op.create_foreign_key(op.f('books_category_id_fkey'), 'books', 'categories', ['category_id'], ['id'])
    op.drop_column('books', 'image')
    op.drop_column('books', 'description')
    # ### end Alembic commands ###
